// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Waypoint.proto

#ifndef PROTOBUF_INCLUDED_Waypoint_2eproto
#define PROTOBUF_INCLUDED_Waypoint_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Waypoint_2eproto 

namespace protobuf_Waypoint_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Waypoint_2eproto
namespace mcs {
class Waypoint;
class WaypointDefaultTypeInternal;
extern WaypointDefaultTypeInternal _Waypoint_default_instance_;
class WaypointList;
class WaypointListDefaultTypeInternal;
extern WaypointListDefaultTypeInternal _WaypointList_default_instance_;
}  // namespace mcs
namespace google {
namespace protobuf {
template<> ::mcs::Waypoint* Arena::CreateMaybeMessage<::mcs::Waypoint>(Arena*);
template<> ::mcs::WaypointList* Arena::CreateMaybeMessage<::mcs::WaypointList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mcs {

// ===================================================================

class Waypoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mcs.Waypoint) */ {
 public:
  Waypoint();
  virtual ~Waypoint();

  Waypoint(const Waypoint& from);

  inline Waypoint& operator=(const Waypoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Waypoint(Waypoint&& from) noexcept
    : Waypoint() {
    *this = ::std::move(from);
  }

  inline Waypoint& operator=(Waypoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Waypoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Waypoint* internal_default_instance() {
    return reinterpret_cast<const Waypoint*>(
               &_Waypoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Waypoint* other);
  friend void swap(Waypoint& a, Waypoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Waypoint* New() const final {
    return CreateMaybeMessage<Waypoint>(NULL);
  }

  Waypoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Waypoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Waypoint& from);
  void MergeFrom(const Waypoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Waypoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  double latitude() const;
  void set_latitude(double value);

  // double longtitude = 2;
  void clear_longtitude();
  static const int kLongtitudeFieldNumber = 2;
  double longtitude() const;
  void set_longtitude(double value);

  // float speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  float speed() const;
  void set_speed(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // int32 loiter = 5;
  void clear_loiter();
  static const int kLoiterFieldNumber = 5;
  ::google::protobuf::int32 loiter() const;
  void set_loiter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mcs.Waypoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double latitude_;
  double longtitude_;
  float speed_;
  float altitude_;
  ::google::protobuf::int32 loiter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Waypoint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WaypointList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mcs.WaypointList) */ {
 public:
  WaypointList();
  virtual ~WaypointList();

  WaypointList(const WaypointList& from);

  inline WaypointList& operator=(const WaypointList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaypointList(WaypointList&& from) noexcept
    : WaypointList() {
    *this = ::std::move(from);
  }

  inline WaypointList& operator=(WaypointList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WaypointList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaypointList* internal_default_instance() {
    return reinterpret_cast<const WaypointList*>(
               &_WaypointList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(WaypointList* other);
  friend void swap(WaypointList& a, WaypointList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaypointList* New() const final {
    return CreateMaybeMessage<WaypointList>(NULL);
  }

  WaypointList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WaypointList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WaypointList& from);
  void MergeFrom(const WaypointList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WaypointList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mcs.Waypoint waypoint = 1;
  int waypoint_size() const;
  void clear_waypoint();
  static const int kWaypointFieldNumber = 1;
  ::mcs::Waypoint* mutable_waypoint(int index);
  ::google::protobuf::RepeatedPtrField< ::mcs::Waypoint >*
      mutable_waypoint();
  const ::mcs::Waypoint& waypoint(int index) const;
  ::mcs::Waypoint* add_waypoint();
  const ::google::protobuf::RepeatedPtrField< ::mcs::Waypoint >&
      waypoint() const;

  // @@protoc_insertion_point(class_scope:mcs.WaypointList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mcs::Waypoint > waypoint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Waypoint_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Waypoint

// double latitude = 1;
inline void Waypoint::clear_latitude() {
  latitude_ = 0;
}
inline double Waypoint::latitude() const {
  // @@protoc_insertion_point(field_get:mcs.Waypoint.latitude)
  return latitude_;
}
inline void Waypoint::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:mcs.Waypoint.latitude)
}

// double longtitude = 2;
inline void Waypoint::clear_longtitude() {
  longtitude_ = 0;
}
inline double Waypoint::longtitude() const {
  // @@protoc_insertion_point(field_get:mcs.Waypoint.longtitude)
  return longtitude_;
}
inline void Waypoint::set_longtitude(double value) {
  
  longtitude_ = value;
  // @@protoc_insertion_point(field_set:mcs.Waypoint.longtitude)
}

// float speed = 3;
inline void Waypoint::clear_speed() {
  speed_ = 0;
}
inline float Waypoint::speed() const {
  // @@protoc_insertion_point(field_get:mcs.Waypoint.speed)
  return speed_;
}
inline void Waypoint::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:mcs.Waypoint.speed)
}

// float altitude = 4;
inline void Waypoint::clear_altitude() {
  altitude_ = 0;
}
inline float Waypoint::altitude() const {
  // @@protoc_insertion_point(field_get:mcs.Waypoint.altitude)
  return altitude_;
}
inline void Waypoint::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:mcs.Waypoint.altitude)
}

// int32 loiter = 5;
inline void Waypoint::clear_loiter() {
  loiter_ = 0;
}
inline ::google::protobuf::int32 Waypoint::loiter() const {
  // @@protoc_insertion_point(field_get:mcs.Waypoint.loiter)
  return loiter_;
}
inline void Waypoint::set_loiter(::google::protobuf::int32 value) {
  
  loiter_ = value;
  // @@protoc_insertion_point(field_set:mcs.Waypoint.loiter)
}

// -------------------------------------------------------------------

// WaypointList

// repeated .mcs.Waypoint waypoint = 1;
inline int WaypointList::waypoint_size() const {
  return waypoint_.size();
}
inline void WaypointList::clear_waypoint() {
  waypoint_.Clear();
}
inline ::mcs::Waypoint* WaypointList::mutable_waypoint(int index) {
  // @@protoc_insertion_point(field_mutable:mcs.WaypointList.waypoint)
  return waypoint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mcs::Waypoint >*
WaypointList::mutable_waypoint() {
  // @@protoc_insertion_point(field_mutable_list:mcs.WaypointList.waypoint)
  return &waypoint_;
}
inline const ::mcs::Waypoint& WaypointList::waypoint(int index) const {
  // @@protoc_insertion_point(field_get:mcs.WaypointList.waypoint)
  return waypoint_.Get(index);
}
inline ::mcs::Waypoint* WaypointList::add_waypoint() {
  // @@protoc_insertion_point(field_add:mcs.WaypointList.waypoint)
  return waypoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mcs::Waypoint >&
WaypointList::waypoint() const {
  // @@protoc_insertion_point(field_list:mcs.WaypointList.waypoint)
  return waypoint_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mcs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Waypoint_2eproto

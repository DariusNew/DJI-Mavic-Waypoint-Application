// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Waypoint.proto

#include "Waypoint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Waypoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Waypoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Waypoint;
}  // namespace protobuf_Waypoint_2eproto
namespace mcs {
class WaypointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Waypoint>
      _instance;
} _Waypoint_default_instance_;
class WaypointListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaypointList>
      _instance;
} _WaypointList_default_instance_;
}  // namespace mcs
namespace protobuf_Waypoint_2eproto {
static void InitDefaultsWaypoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcs::_Waypoint_default_instance_;
    new (ptr) ::mcs::Waypoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcs::Waypoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Waypoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaypoint}, {}};

static void InitDefaultsWaypointList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcs::_WaypointList_default_instance_;
    new (ptr) ::mcs::WaypointList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcs::WaypointList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WaypointList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWaypointList}, {
      &protobuf_Waypoint_2eproto::scc_info_Waypoint.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Waypoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaypointList.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, longtitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::Waypoint, loiter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::WaypointList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcs::WaypointList, waypoint_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mcs::Waypoint)},
  { 10, -1, sizeof(::mcs::WaypointList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcs::_Waypoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcs::_WaypointList_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Waypoint.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Waypoint.proto\022\003mcs\"a\n\010Waypoint\022\020\n\010lat"
      "itude\030\001 \001(\001\022\022\n\nlongtitude\030\002 \001(\001\022\r\n\005speed"
      "\030\003 \001(\002\022\020\n\010altitude\030\004 \001(\002\022\016\n\006loiter\030\005 \001(\005"
      "\"/\n\014WaypointList\022\037\n\010waypoint\030\001 \003(\0132\r.mcs"
      ".Waypointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 177);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Waypoint.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Waypoint_2eproto
namespace mcs {

// ===================================================================

void Waypoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Waypoint::kLatitudeFieldNumber;
const int Waypoint::kLongtitudeFieldNumber;
const int Waypoint::kSpeedFieldNumber;
const int Waypoint::kAltitudeFieldNumber;
const int Waypoint::kLoiterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Waypoint::Waypoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Waypoint_2eproto::scc_info_Waypoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcs.Waypoint)
}
Waypoint::Waypoint(const Waypoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&loiter_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(loiter_));
  // @@protoc_insertion_point(copy_constructor:mcs.Waypoint)
}

void Waypoint::SharedCtor() {
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loiter_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(loiter_));
}

Waypoint::~Waypoint() {
  // @@protoc_insertion_point(destructor:mcs.Waypoint)
  SharedDtor();
}

void Waypoint::SharedDtor() {
}

void Waypoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Waypoint::descriptor() {
  ::protobuf_Waypoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Waypoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Waypoint& Waypoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Waypoint_2eproto::scc_info_Waypoint.base);
  return *internal_default_instance();
}


void Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:mcs.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loiter_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(loiter_));
  _internal_metadata_.Clear();
}

bool Waypoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcs.Waypoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longtitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longtitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 loiter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loiter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcs.Waypoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcs.Waypoint)
  return false;
#undef DO_
}

void Waypoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcs.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->latitude(), output);
  }

  // double longtitude = 2;
  if (this->longtitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longtitude(), output);
  }

  // float speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->speed(), output);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->altitude(), output);
  }

  // int32 loiter = 5;
  if (this->loiter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->loiter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcs.Waypoint)
}

::google::protobuf::uint8* Waypoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcs.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->latitude(), target);
  }

  // double longtitude = 2;
  if (this->longtitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longtitude(), target);
  }

  // float speed = 3;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->speed(), target);
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->altitude(), target);
  }

  // int32 loiter = 5;
  if (this->loiter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->loiter(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcs.Waypoint)
  return target;
}

size_t Waypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcs.Waypoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double latitude = 1;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double longtitude = 2;
  if (this->longtitude() != 0) {
    total_size += 1 + 8;
  }

  // float speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // float altitude = 4;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  // int32 loiter = 5;
  if (this->loiter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loiter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcs.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Waypoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcs.Waypoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcs.Waypoint)
    MergeFrom(*source);
  }
}

void Waypoint::MergeFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcs.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longtitude() != 0) {
    set_longtitude(from.longtitude());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.loiter() != 0) {
    set_loiter(from.loiter());
  }
}

void Waypoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcs.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint::CopyFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcs.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint::IsInitialized() const {
  return true;
}

void Waypoint::Swap(Waypoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Waypoint::InternalSwap(Waypoint* other) {
  using std::swap;
  swap(latitude_, other->latitude_);
  swap(longtitude_, other->longtitude_);
  swap(speed_, other->speed_);
  swap(altitude_, other->altitude_);
  swap(loiter_, other->loiter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Waypoint::GetMetadata() const {
  protobuf_Waypoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Waypoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaypointList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaypointList::kWaypointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaypointList::WaypointList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Waypoint_2eproto::scc_info_WaypointList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcs.WaypointList)
}
WaypointList::WaypointList(const WaypointList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      waypoint_(from.waypoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcs.WaypointList)
}

void WaypointList::SharedCtor() {
}

WaypointList::~WaypointList() {
  // @@protoc_insertion_point(destructor:mcs.WaypointList)
  SharedDtor();
}

void WaypointList::SharedDtor() {
}

void WaypointList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaypointList::descriptor() {
  ::protobuf_Waypoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Waypoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaypointList& WaypointList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Waypoint_2eproto::scc_info_WaypointList.base);
  return *internal_default_instance();
}


void WaypointList::Clear() {
// @@protoc_insertion_point(message_clear_start:mcs.WaypointList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoint_.Clear();
  _internal_metadata_.Clear();
}

bool WaypointList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcs.WaypointList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcs.Waypoint waypoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_waypoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcs.WaypointList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcs.WaypointList)
  return false;
#undef DO_
}

void WaypointList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcs.WaypointList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcs.Waypoint waypoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->waypoint(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcs.WaypointList)
}

::google::protobuf::uint8* WaypointList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcs.WaypointList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcs.Waypoint waypoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->waypoint(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcs.WaypointList)
  return target;
}

size_t WaypointList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcs.WaypointList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcs.Waypoint waypoint = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->waypoint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->waypoint(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaypointList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcs.WaypointList)
  GOOGLE_DCHECK_NE(&from, this);
  const WaypointList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaypointList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcs.WaypointList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcs.WaypointList)
    MergeFrom(*source);
  }
}

void WaypointList::MergeFrom(const WaypointList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcs.WaypointList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  waypoint_.MergeFrom(from.waypoint_);
}

void WaypointList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcs.WaypointList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaypointList::CopyFrom(const WaypointList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcs.WaypointList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaypointList::IsInitialized() const {
  return true;
}

void WaypointList::Swap(WaypointList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaypointList::InternalSwap(WaypointList* other) {
  using std::swap;
  CastToBase(&waypoint_)->InternalSwap(CastToBase(&other->waypoint_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaypointList::GetMetadata() const {
  protobuf_Waypoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Waypoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mcs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcs::Waypoint* Arena::CreateMaybeMessage< ::mcs::Waypoint >(Arena* arena) {
  return Arena::CreateInternal< ::mcs::Waypoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcs::WaypointList* Arena::CreateMaybeMessage< ::mcs::WaypointList >(Arena* arena) {
  return Arena::CreateInternal< ::mcs::WaypointList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
